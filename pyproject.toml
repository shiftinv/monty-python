[tool.poetry]
name = "monty"
version = "1.0.0"
description = "Helpful bot for python, github, and discord things."
authors = ["aru <genericusername414@gmail.com>"]
license = "MIT"

[tool.poetry.dependencies]
python = "~=3.9"
aiodns = "~=2.0"
aiohttp = "~=3.8.1"
arrow = "~=1.2.2"
attrs = "^21.4.0"
base65536 = "^0.1.1"
beautifulsoup4 = "^4.10.0"
cachingutils = { git = "https://github.com/onerandomusername/cachingutils.git", rev='vcokltfre/feat/v2' }
colorama = { version = "~=0.4.3", markers = "sys_platform == 'win32'" }
coloredlogs = "~=14.0"
disnake = { git = "https://github.com/DisnakeDev/disnake.git", rev='master' }
fakeredis = { url = "https://github.com/dsoftwareinc/fakeredis-py/archive/3b22120dc7718eb63418a48bdcf07532f4e3cbdc.zip", optional = true }
lxml = "^4.6.4"
markdownify = "==0.11.2"
redis = { version = "^4.3.1", extras = ['hiredis'] }
Pillow = "^9.0.0"
psutil = "^5.9.0"
rapidfuzz = "~=1.4"
statsd = "^3.3.0"
# database dependencies
alembic = "^1.7.7"
asyncpg = "^0.25.0"
databases = "^0.5.5"
# currently using master as the published pypi version has a dependencies bug which requires aiosqlite
ormar = {git = "https://github.com/collerek/ormar.git", rev ='master'}
psycopg2-binary = "^2.9.3"
pydantic = "^1.9.0"
SQLAlchemy = "^1.4.31"
ormar-postgres-extensions = "^2.1.0"

[tool.poetry.extras]
fakeredis = ['fakeredis']


[tool.poetry.dev-dependencies]
black = "^22.0"
coverage = "~=5.0"
flake8 = "^4.0"
flake8-annotations = "~=2.9.0"
flake8-bugbear = "~=22.4.0"
flake8-docstrings = "~=1.6"
flake8-isort = "^4.0.0"
flake8-string-format = "~=0.3"
flake8-tidy-imports = "~=4.1"
flake8-todo = "~=0.7"
isort = "^5.10.1"
pre-commit = "~=2.18.0"
taskipy = "~=1.10.0"
python-dotenv = "~=0.20.0"
pytest = "~=6.2.4"
pytest-cov = "~=2.12.1"
pytest-xdist = { version = "~=2.3.0", extras = ["psutil"] }

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py38']
include = '\.pyi?$'

[tool.taskipy.tasks]
export = 'poetry export --without-hashes -o requirements.txt'
start = "python -m monty"
lint = "pre-commit run --all-files"
precommit = "pre-commit install"
test-nocov = "pytest -n auto"
test = "pytest -n auto --cov-report= --cov"
html = "coverage html"
report = "coverage report"

[tool.coverage.run]
branch = true
source_pkgs = ["bot"]
source = ["tests"]
